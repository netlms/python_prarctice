"""
이번에는 복리 이자를 계산해 볼게요.

예를 들어 1,500,000원을 3개월 동안 넣어두면 연 4.3%의 이자를 주는 상품이 있다고 할 때, 만기가 될 때마다 받는 이자와 원금을 합한 금액을 재예치하여 6년간 운용했을 때 받는 총액을 계산해보겠습니다.

>>> r = 0.043
>>> n = 4
위의 r은 연이율을 나타내는 변수고, n은 1년 동안에 복리가 몇 번 적용되는지는 나타내는 변수입니다. 3개월이 4번 지나야 1년이 되는데, 이때 4가 바로 n 변숫값이 됩니다. 
이렇게 하는 이유는 실제 계산을 해보면 이해할 수 있습니다.

우선 첫 해만 계산해볼게요.

>>> 1500000 * (1 + r / n) # 처음 3개월
1516125.0
>>> _ * (1 + r / n) # 그 다음 3개월
1532423.34375
>>> _ * (1 + r / n) # 그 다음 3개월
1548896.8946953125
>>> _ * (1 + r / n) # 그 다음 3개월
1565547.5363132872
이렇게 해서 처음 1년 동안의 원리금을 계산했습니다.

2년차도 계산해볼까요?

>>> _ * (1 + r / n)
1582377.1723286551
>>> _ * (1 + r / n)
1599387.7269311883
>>> _ * (1 + r / n)
1616581.1449956987
>>> _ * (1 + r / n)
1633959.3923044025
같은 방식으로 6년치를 계산하면,

>>> _ * (1 + r / n)
1938836.8221341053
최종적으로 위 금액이 나옵니다. 한번 해보세요. 엄청 귀찮습니다. 소수점 이하가 길어서 보기 불편하지만 지금은 그대로 둘게요.

이 계산을 쉽게 하려면 다음과 같은 복리 계산 공식을 이용하면 됩니다.
P' = P(1 + (r / n))^nt

 

 P' : 원리금
 P : 원금
 r : 연이율
 t : 기간
 n : 복리 횟수

앞에서 손수 계산했던 것을 이번에는 공식에 대입해 풀어보겠습니다. 변수명은 모두 소문자로 할게요.

>>> p = 1500000
>>> r = 0.043
>>> t = 6
>>> n = 4
>>> p * (1 + r / n) ** (n * t)
1938836.8221341055

문제
복리 예금의 원금(p), 연이율(r), 기간(t), 복리 횟수(n)에 대한 원리금을 계산하는 함수 compound_interest_amount()를 작성하세요.

예 1
6년간 매분기 이자를 주는 경우(t=6, n=4)

>>> compound_interest_amount(1500000, 0.043, 6, 4)
1938836.8221341055

예 2
6년간 2년마다 이자를 주는 경우(t=6, n=1/2)

>>> compound_interest_amount(1500000, 0.043, 6, 1/2)
1921236.0840000005
"""

def compound_interest_amount(p, r, t, n):
    return (p * (1 + (r / n)) ** (n * t))

print(compound_interest_amount(1500000, 0.043, 6, 4))
print(compound_interest_amount(1500000, 0.043, 6, 1/2))